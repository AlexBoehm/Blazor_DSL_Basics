/* This file ist generated by the program DSLMethodsGenerator. DO NOT EDIT IT MANUALLY! */

using System.Collections.Generic;
using System.Linq;

namespace BlazorDSL {
    public static partial class Html {
        
        public static Node a(Attribute[] attributes, params Node[] inner)
            => new TagNode("a", attributes, inner);

        public static Node a(params Node[] inner)
            => new TagNode("a", inner);

        public static Node a(IEnumerable<Node> inner)
            => new TagNode("a", inner.ToArray());

        public static Node a(Attribute[] attributes, string text)
            => new TagNode("a", attributes, Html.text(text));

        public static Node a(string text)
            => new TagNode("a", Html.text(text));

        public static Node abbr(Attribute[] attributes, params Node[] inner)
            => new TagNode("abbr", attributes, inner);

        public static Node abbr(params Node[] inner)
            => new TagNode("abbr", inner);

        public static Node abbr(IEnumerable<Node> inner)
            => new TagNode("abbr", inner.ToArray());

        public static Node address(Attribute[] attributes, params Node[] inner)
            => new TagNode("address", attributes, inner);

        public static Node address(params Node[] inner)
            => new TagNode("address", inner);

        public static Node address(IEnumerable<Node> inner)
            => new TagNode("address", inner.ToArray());

        public static Node area(params Attribute[] attributes)
            => new TagNode("area", attributes);

        public static Node article(Attribute[] attributes, params Node[] inner)
            => new TagNode("article", attributes, inner);

        public static Node article(params Node[] inner)
            => new TagNode("article", inner);

        public static Node article(IEnumerable<Node> inner)
            => new TagNode("article", inner.ToArray());

        public static Node aside(Attribute[] attributes, params Node[] inner)
            => new TagNode("aside", attributes, inner);

        public static Node aside(params Node[] inner)
            => new TagNode("aside", inner);

        public static Node aside(IEnumerable<Node> inner)
            => new TagNode("aside", inner.ToArray());

        public static Node audio(Attribute[] attributes, params Node[] inner)
            => new TagNode("audio", attributes, inner);

        public static Node audio(params Node[] inner)
            => new TagNode("audio", inner);

        public static Node audio(IEnumerable<Node> inner)
            => new TagNode("audio", inner.ToArray());

        public static Node b(Attribute[] attributes, params Node[] inner)
            => new TagNode("b", attributes, inner);

        public static Node b(params Node[] inner)
            => new TagNode("b", inner);

        public static Node b(IEnumerable<Node> inner)
            => new TagNode("b", inner.ToArray());

        public static Node @base(params Attribute[] attributes)
            => new TagNode("base", attributes);

        public static Node bdi(Attribute[] attributes, params Node[] inner)
            => new TagNode("bdi", attributes, inner);

        public static Node bdi(params Node[] inner)
            => new TagNode("bdi", inner);

        public static Node bdi(IEnumerable<Node> inner)
            => new TagNode("bdi", inner.ToArray());

        public static Node bdo(Attribute[] attributes, params Node[] inner)
            => new TagNode("bdo", attributes, inner);

        public static Node bdo(params Node[] inner)
            => new TagNode("bdo", inner);

        public static Node bdo(IEnumerable<Node> inner)
            => new TagNode("bdo", inner.ToArray());

        public static Node blockquote(Attribute[] attributes, params Node[] inner)
            => new TagNode("blockquote", attributes, inner);

        public static Node blockquote(params Node[] inner)
            => new TagNode("blockquote", inner);

        public static Node blockquote(IEnumerable<Node> inner)
            => new TagNode("blockquote", inner.ToArray());

        public static Node body(Attribute[] attributes, params Node[] inner)
            => new TagNode("body", attributes, inner);

        public static Node body(params Node[] inner)
            => new TagNode("body", inner);

        public static Node body(IEnumerable<Node> inner)
            => new TagNode("body", inner.ToArray());

        public static Node br(params Attribute[] attributes)
            => new TagNode("br", attributes);

        public static Node button(Attribute[] attributes, params Node[] inner)
            => new TagNode("button", attributes, inner);

        public static Node button(params Node[] inner)
            => new TagNode("button", inner);

        public static Node button(IEnumerable<Node> inner)
            => new TagNode("button", inner.ToArray());

        public static Node button(Attribute[] attributes, string text)
            => new TagNode("button", attributes, Html.text(text));

        public static Node button(string text)
            => new TagNode("button", Html.text(text));

        public static Node canvas(Attribute[] attributes, params Node[] inner)
            => new TagNode("canvas", attributes, inner);

        public static Node canvas(params Node[] inner)
            => new TagNode("canvas", inner);

        public static Node canvas(IEnumerable<Node> inner)
            => new TagNode("canvas", inner.ToArray());

        public static Node caption(Attribute[] attributes, params Node[] inner)
            => new TagNode("caption", attributes, inner);

        public static Node caption(params Node[] inner)
            => new TagNode("caption", inner);

        public static Node caption(IEnumerable<Node> inner)
            => new TagNode("caption", inner.ToArray());

        public static Node cite(Attribute[] attributes, params Node[] inner)
            => new TagNode("cite", attributes, inner);

        public static Node cite(params Node[] inner)
            => new TagNode("cite", inner);

        public static Node cite(IEnumerable<Node> inner)
            => new TagNode("cite", inner.ToArray());

        public static Node code(Attribute[] attributes, params Node[] inner)
            => new TagNode("code", attributes, inner);

        public static Node code(params Node[] inner)
            => new TagNode("code", inner);

        public static Node code(IEnumerable<Node> inner)
            => new TagNode("code", inner.ToArray());

        public static Node col(params Attribute[] attributes)
            => new TagNode("col", attributes);

        public static Node colgroup(Attribute[] attributes, params Node[] inner)
            => new TagNode("colgroup", attributes, inner);

        public static Node colgroup(params Node[] inner)
            => new TagNode("colgroup", inner);

        public static Node colgroup(IEnumerable<Node> inner)
            => new TagNode("colgroup", inner.ToArray());

        public static Node data(Attribute[] attributes, params Node[] inner)
            => new TagNode("data", attributes, inner);

        public static Node data(params Node[] inner)
            => new TagNode("data", inner);

        public static Node data(IEnumerable<Node> inner)
            => new TagNode("data", inner.ToArray());

        public static Node datalist(Attribute[] attributes, params Node[] inner)
            => new TagNode("datalist", attributes, inner);

        public static Node datalist(params Node[] inner)
            => new TagNode("datalist", inner);

        public static Node datalist(IEnumerable<Node> inner)
            => new TagNode("datalist", inner.ToArray());

        public static Node dd(Attribute[] attributes, params Node[] inner)
            => new TagNode("dd", attributes, inner);

        public static Node dd(params Node[] inner)
            => new TagNode("dd", inner);

        public static Node dd(IEnumerable<Node> inner)
            => new TagNode("dd", inner.ToArray());

        public static Node del(Attribute[] attributes, params Node[] inner)
            => new TagNode("del", attributes, inner);

        public static Node del(params Node[] inner)
            => new TagNode("del", inner);

        public static Node del(IEnumerable<Node> inner)
            => new TagNode("del", inner.ToArray());

        public static Node details(Attribute[] attributes, params Node[] inner)
            => new TagNode("details", attributes, inner);

        public static Node details(params Node[] inner)
            => new TagNode("details", inner);

        public static Node details(IEnumerable<Node> inner)
            => new TagNode("details", inner.ToArray());

        public static Node dfn(Attribute[] attributes, params Node[] inner)
            => new TagNode("dfn", attributes, inner);

        public static Node dfn(params Node[] inner)
            => new TagNode("dfn", inner);

        public static Node dfn(IEnumerable<Node> inner)
            => new TagNode("dfn", inner.ToArray());

        public static Node dialog(Attribute[] attributes, params Node[] inner)
            => new TagNode("dialog", attributes, inner);

        public static Node dialog(params Node[] inner)
            => new TagNode("dialog", inner);

        public static Node dialog(IEnumerable<Node> inner)
            => new TagNode("dialog", inner.ToArray());

        public static Node div(Attribute[] attributes, params Node[] inner)
            => new TagNode("div", attributes, inner);

        public static Node div(params Node[] inner)
            => new TagNode("div", inner);

        public static Node div(IEnumerable<Node> inner)
            => new TagNode("div", inner.ToArray());

        public static Node div(Attribute[] attributes, string text)
            => new TagNode("div", attributes, Html.text(text));

        public static Node div(string text)
            => new TagNode("div", Html.text(text));

        public static Node dl(Attribute[] attributes, params Node[] inner)
            => new TagNode("dl", attributes, inner);

        public static Node dl(params Node[] inner)
            => new TagNode("dl", inner);

        public static Node dl(IEnumerable<Node> inner)
            => new TagNode("dl", inner.ToArray());

        public static Node dt(Attribute[] attributes, params Node[] inner)
            => new TagNode("dt", attributes, inner);

        public static Node dt(params Node[] inner)
            => new TagNode("dt", inner);

        public static Node dt(IEnumerable<Node> inner)
            => new TagNode("dt", inner.ToArray());

        public static Node em(Attribute[] attributes, params Node[] inner)
            => new TagNode("em", attributes, inner);

        public static Node em(params Node[] inner)
            => new TagNode("em", inner);

        public static Node em(IEnumerable<Node> inner)
            => new TagNode("em", inner.ToArray());

        public static Node embed(params Attribute[] attributes)
            => new TagNode("embed", attributes);

        public static Node fieldset(Attribute[] attributes, params Node[] inner)
            => new TagNode("fieldset", attributes, inner);

        public static Node fieldset(params Node[] inner)
            => new TagNode("fieldset", inner);

        public static Node fieldset(IEnumerable<Node> inner)
            => new TagNode("fieldset", inner.ToArray());

        public static Node figcaption(Attribute[] attributes, params Node[] inner)
            => new TagNode("figcaption", attributes, inner);

        public static Node figcaption(params Node[] inner)
            => new TagNode("figcaption", inner);

        public static Node figcaption(IEnumerable<Node> inner)
            => new TagNode("figcaption", inner.ToArray());

        public static Node figure(Attribute[] attributes, params Node[] inner)
            => new TagNode("figure", attributes, inner);

        public static Node figure(params Node[] inner)
            => new TagNode("figure", inner);

        public static Node figure(IEnumerable<Node> inner)
            => new TagNode("figure", inner.ToArray());

        public static Node footer(Attribute[] attributes, params Node[] inner)
            => new TagNode("footer", attributes, inner);

        public static Node footer(params Node[] inner)
            => new TagNode("footer", inner);

        public static Node footer(IEnumerable<Node> inner)
            => new TagNode("footer", inner.ToArray());

        public static Node form(Attribute[] attributes, params Node[] inner)
            => new TagNode("form", attributes, inner);

        public static Node form(params Node[] inner)
            => new TagNode("form", inner);

        public static Node form(IEnumerable<Node> inner)
            => new TagNode("form", inner.ToArray());

        public static Node h1(Attribute[] attributes, params Node[] inner)
            => new TagNode("h1", attributes, inner);

        public static Node h1(params Node[] inner)
            => new TagNode("h1", inner);

        public static Node h1(IEnumerable<Node> inner)
            => new TagNode("h1", inner.ToArray());

        public static Node h1(Attribute[] attributes, string text)
            => new TagNode("h1", attributes, Html.text(text));

        public static Node h1(string text)
            => new TagNode("h1", Html.text(text));

        public static Node h2(Attribute[] attributes, params Node[] inner)
            => new TagNode("h2", attributes, inner);

        public static Node h2(params Node[] inner)
            => new TagNode("h2", inner);

        public static Node h2(IEnumerable<Node> inner)
            => new TagNode("h2", inner.ToArray());

        public static Node h2(Attribute[] attributes, string text)
            => new TagNode("h2", attributes, Html.text(text));

        public static Node h2(string text)
            => new TagNode("h2", Html.text(text));

        public static Node h3(Attribute[] attributes, params Node[] inner)
            => new TagNode("h3", attributes, inner);

        public static Node h3(params Node[] inner)
            => new TagNode("h3", inner);

        public static Node h3(IEnumerable<Node> inner)
            => new TagNode("h3", inner.ToArray());

        public static Node h3(Attribute[] attributes, string text)
            => new TagNode("h3", attributes, Html.text(text));

        public static Node h3(string text)
            => new TagNode("h3", Html.text(text));

        public static Node h4(Attribute[] attributes, params Node[] inner)
            => new TagNode("h4", attributes, inner);

        public static Node h4(params Node[] inner)
            => new TagNode("h4", inner);

        public static Node h4(IEnumerable<Node> inner)
            => new TagNode("h4", inner.ToArray());

        public static Node h4(Attribute[] attributes, string text)
            => new TagNode("h4", attributes, Html.text(text));

        public static Node h4(string text)
            => new TagNode("h4", Html.text(text));

        public static Node h5(Attribute[] attributes, params Node[] inner)
            => new TagNode("h5", attributes, inner);

        public static Node h5(params Node[] inner)
            => new TagNode("h5", inner);

        public static Node h5(IEnumerable<Node> inner)
            => new TagNode("h5", inner.ToArray());

        public static Node h5(Attribute[] attributes, string text)
            => new TagNode("h5", attributes, Html.text(text));

        public static Node h5(string text)
            => new TagNode("h5", Html.text(text));

        public static Node h6(Attribute[] attributes, params Node[] inner)
            => new TagNode("h6", attributes, inner);

        public static Node h6(params Node[] inner)
            => new TagNode("h6", inner);

        public static Node h6(IEnumerable<Node> inner)
            => new TagNode("h6", inner.ToArray());

        public static Node h6(Attribute[] attributes, string text)
            => new TagNode("h6", attributes, Html.text(text));

        public static Node h6(string text)
            => new TagNode("h6", Html.text(text));

        public static Node head(Attribute[] attributes, params Node[] inner)
            => new TagNode("head", attributes, inner);

        public static Node head(params Node[] inner)
            => new TagNode("head", inner);

        public static Node head(IEnumerable<Node> inner)
            => new TagNode("head", inner.ToArray());

        public static Node header(Attribute[] attributes, params Node[] inner)
            => new TagNode("header", attributes, inner);

        public static Node header(params Node[] inner)
            => new TagNode("header", inner);

        public static Node header(IEnumerable<Node> inner)
            => new TagNode("header", inner.ToArray());

        public static Node hgroup(Attribute[] attributes, params Node[] inner)
            => new TagNode("hgroup", attributes, inner);

        public static Node hgroup(params Node[] inner)
            => new TagNode("hgroup", inner);

        public static Node hgroup(IEnumerable<Node> inner)
            => new TagNode("hgroup", inner.ToArray());

        public static Node hr(params Attribute[] attributes)
            => new TagNode("hr", attributes);

        public static Node html(Attribute[] attributes, params Node[] inner)
            => new TagNode("html", attributes, inner);

        public static Node html(params Node[] inner)
            => new TagNode("html", inner);

        public static Node html(IEnumerable<Node> inner)
            => new TagNode("html", inner.ToArray());

        public static Node i(Attribute[] attributes, params Node[] inner)
            => new TagNode("i", attributes, inner);

        public static Node i(params Node[] inner)
            => new TagNode("i", inner);

        public static Node i(IEnumerable<Node> inner)
            => new TagNode("i", inner.ToArray());

        public static Node i(Attribute[] attributes, string text)
            => new TagNode("i", attributes, Html.text(text));

        public static Node i(string text)
            => new TagNode("i", Html.text(text));

        public static Node iframe(Attribute[] attributes, params Node[] inner)
            => new TagNode("iframe", attributes, inner);

        public static Node iframe(params Node[] inner)
            => new TagNode("iframe", inner);

        public static Node iframe(IEnumerable<Node> inner)
            => new TagNode("iframe", inner.ToArray());

        public static Node img(params Attribute[] attributes)
            => new TagNode("img", attributes);

        public static Node input(params Attribute[] attributes)
            => new TagNode("input", attributes);

        public static Node ins(Attribute[] attributes, params Node[] inner)
            => new TagNode("ins", attributes, inner);

        public static Node ins(params Node[] inner)
            => new TagNode("ins", inner);

        public static Node ins(IEnumerable<Node> inner)
            => new TagNode("ins", inner.ToArray());

        public static Node kbd(Attribute[] attributes, params Node[] inner)
            => new TagNode("kbd", attributes, inner);

        public static Node kbd(params Node[] inner)
            => new TagNode("kbd", inner);

        public static Node kbd(IEnumerable<Node> inner)
            => new TagNode("kbd", inner.ToArray());

        public static Node label(Attribute[] attributes, params Node[] inner)
            => new TagNode("label", attributes, inner);

        public static Node label(params Node[] inner)
            => new TagNode("label", inner);

        public static Node label(IEnumerable<Node> inner)
            => new TagNode("label", inner.ToArray());

        public static Node legend(Attribute[] attributes, params Node[] inner)
            => new TagNode("legend", attributes, inner);

        public static Node legend(params Node[] inner)
            => new TagNode("legend", inner);

        public static Node legend(IEnumerable<Node> inner)
            => new TagNode("legend", inner.ToArray());

        public static Node li(Attribute[] attributes, params Node[] inner)
            => new TagNode("li", attributes, inner);

        public static Node li(params Node[] inner)
            => new TagNode("li", inner);

        public static Node li(IEnumerable<Node> inner)
            => new TagNode("li", inner.ToArray());

        public static Node li(Attribute[] attributes, string text)
            => new TagNode("li", attributes, Html.text(text));

        public static Node li(string text)
            => new TagNode("li", Html.text(text));

        public static Node link(params Attribute[] attributes)
            => new TagNode("link", attributes);

        public static Node main(Attribute[] attributes, params Node[] inner)
            => new TagNode("main", attributes, inner);

        public static Node main(params Node[] inner)
            => new TagNode("main", inner);

        public static Node main(IEnumerable<Node> inner)
            => new TagNode("main", inner.ToArray());

        public static Node map(Attribute[] attributes, params Node[] inner)
            => new TagNode("map", attributes, inner);

        public static Node map(params Node[] inner)
            => new TagNode("map", inner);

        public static Node map(IEnumerable<Node> inner)
            => new TagNode("map", inner.ToArray());

        public static Node mark(Attribute[] attributes, params Node[] inner)
            => new TagNode("mark", attributes, inner);

        public static Node mark(params Node[] inner)
            => new TagNode("mark", inner);

        public static Node mark(IEnumerable<Node> inner)
            => new TagNode("mark", inner.ToArray());

        public static Node menu(Attribute[] attributes, params Node[] inner)
            => new TagNode("menu", attributes, inner);

        public static Node menu(params Node[] inner)
            => new TagNode("menu", inner);

        public static Node menu(IEnumerable<Node> inner)
            => new TagNode("menu", inner.ToArray());

        public static Node meta(params Attribute[] attributes)
            => new TagNode("meta", attributes);

        public static Node meter(Attribute[] attributes, params Node[] inner)
            => new TagNode("meter", attributes, inner);

        public static Node meter(params Node[] inner)
            => new TagNode("meter", inner);

        public static Node meter(IEnumerable<Node> inner)
            => new TagNode("meter", inner.ToArray());

        public static Node nav(Attribute[] attributes, params Node[] inner)
            => new TagNode("nav", attributes, inner);

        public static Node nav(params Node[] inner)
            => new TagNode("nav", inner);

        public static Node nav(IEnumerable<Node> inner)
            => new TagNode("nav", inner.ToArray());

        public static Node noscript(Attribute[] attributes, params Node[] inner)
            => new TagNode("noscript", attributes, inner);

        public static Node noscript(params Node[] inner)
            => new TagNode("noscript", inner);

        public static Node noscript(IEnumerable<Node> inner)
            => new TagNode("noscript", inner.ToArray());

        public static Node @object(Attribute[] attributes, params Node[] inner)
            => new TagNode("object", attributes, inner);

        public static Node @object(params Node[] inner)
            => new TagNode("object", inner);

        public static Node @object(IEnumerable<Node> inner)
            => new TagNode("object", inner.ToArray());

        public static Node ol(Attribute[] attributes, params Node[] inner)
            => new TagNode("ol", attributes, inner);

        public static Node ol(params Node[] inner)
            => new TagNode("ol", inner);

        public static Node ol(IEnumerable<Node> inner)
            => new TagNode("ol", inner.ToArray());

        public static Node optgroup(Attribute[] attributes, params Node[] inner)
            => new TagNode("optgroup", attributes, inner);

        public static Node optgroup(params Node[] inner)
            => new TagNode("optgroup", inner);

        public static Node optgroup(IEnumerable<Node> inner)
            => new TagNode("optgroup", inner.ToArray());

        public static Node option(Attribute[] attributes, params Node[] inner)
            => new TagNode("option", attributes, inner);

        public static Node option(params Node[] inner)
            => new TagNode("option", inner);

        public static Node option(IEnumerable<Node> inner)
            => new TagNode("option", inner.ToArray());

        public static Node output(Attribute[] attributes, params Node[] inner)
            => new TagNode("output", attributes, inner);

        public static Node output(params Node[] inner)
            => new TagNode("output", inner);

        public static Node output(IEnumerable<Node> inner)
            => new TagNode("output", inner.ToArray());

        public static Node p(Attribute[] attributes, params Node[] inner)
            => new TagNode("p", attributes, inner);

        public static Node p(params Node[] inner)
            => new TagNode("p", inner);

        public static Node p(IEnumerable<Node> inner)
            => new TagNode("p", inner.ToArray());

        public static Node p(Attribute[] attributes, string text)
            => new TagNode("p", attributes, Html.text(text));

        public static Node p(string text)
            => new TagNode("p", Html.text(text));

        public static Node param(params Attribute[] attributes)
            => new TagNode("param", attributes);

        public static Node picture(Attribute[] attributes, params Node[] inner)
            => new TagNode("picture", attributes, inner);

        public static Node picture(params Node[] inner)
            => new TagNode("picture", inner);

        public static Node picture(IEnumerable<Node> inner)
            => new TagNode("picture", inner.ToArray());

        public static Node pre(Attribute[] attributes, params Node[] inner)
            => new TagNode("pre", attributes, inner);

        public static Node pre(params Node[] inner)
            => new TagNode("pre", inner);

        public static Node pre(IEnumerable<Node> inner)
            => new TagNode("pre", inner.ToArray());

        public static Node progress(Attribute[] attributes, params Node[] inner)
            => new TagNode("progress", attributes, inner);

        public static Node progress(params Node[] inner)
            => new TagNode("progress", inner);

        public static Node progress(IEnumerable<Node> inner)
            => new TagNode("progress", inner.ToArray());

        public static Node q(Attribute[] attributes, params Node[] inner)
            => new TagNode("q", attributes, inner);

        public static Node q(params Node[] inner)
            => new TagNode("q", inner);

        public static Node q(IEnumerable<Node> inner)
            => new TagNode("q", inner.ToArray());

        public static Node rp(Attribute[] attributes, params Node[] inner)
            => new TagNode("rp", attributes, inner);

        public static Node rp(params Node[] inner)
            => new TagNode("rp", inner);

        public static Node rp(IEnumerable<Node> inner)
            => new TagNode("rp", inner.ToArray());

        public static Node rt(Attribute[] attributes, params Node[] inner)
            => new TagNode("rt", attributes, inner);

        public static Node rt(params Node[] inner)
            => new TagNode("rt", inner);

        public static Node rt(IEnumerable<Node> inner)
            => new TagNode("rt", inner.ToArray());

        public static Node ruby(Attribute[] attributes, params Node[] inner)
            => new TagNode("ruby", attributes, inner);

        public static Node ruby(params Node[] inner)
            => new TagNode("ruby", inner);

        public static Node ruby(IEnumerable<Node> inner)
            => new TagNode("ruby", inner.ToArray());

        public static Node s(Attribute[] attributes, params Node[] inner)
            => new TagNode("s", attributes, inner);

        public static Node s(params Node[] inner)
            => new TagNode("s", inner);

        public static Node s(IEnumerable<Node> inner)
            => new TagNode("s", inner.ToArray());

        public static Node samp(Attribute[] attributes, params Node[] inner)
            => new TagNode("samp", attributes, inner);

        public static Node samp(params Node[] inner)
            => new TagNode("samp", inner);

        public static Node samp(IEnumerable<Node> inner)
            => new TagNode("samp", inner.ToArray());

        public static Node script(Attribute[] attributes, params Node[] inner)
            => new TagNode("script", attributes, inner);

        public static Node script(params Node[] inner)
            => new TagNode("script", inner);

        public static Node script(IEnumerable<Node> inner)
            => new TagNode("script", inner.ToArray());

        public static Node section(Attribute[] attributes, params Node[] inner)
            => new TagNode("section", attributes, inner);

        public static Node section(params Node[] inner)
            => new TagNode("section", inner);

        public static Node section(IEnumerable<Node> inner)
            => new TagNode("section", inner.ToArray());

        public static Node select(Attribute[] attributes, params Node[] inner)
            => new TagNode("select", attributes, inner);

        public static Node select(params Node[] inner)
            => new TagNode("select", inner);

        public static Node select(IEnumerable<Node> inner)
            => new TagNode("select", inner.ToArray());

        public static Node slot(Attribute[] attributes, params Node[] inner)
            => new TagNode("slot", attributes, inner);

        public static Node slot(params Node[] inner)
            => new TagNode("slot", inner);

        public static Node slot(IEnumerable<Node> inner)
            => new TagNode("slot", inner.ToArray());

        public static Node small(Attribute[] attributes, params Node[] inner)
            => new TagNode("small", attributes, inner);

        public static Node small(params Node[] inner)
            => new TagNode("small", inner);

        public static Node small(IEnumerable<Node> inner)
            => new TagNode("small", inner.ToArray());

        public static Node source(params Attribute[] attributes)
            => new TagNode("source", attributes);

        public static Node span(Attribute[] attributes, params Node[] inner)
            => new TagNode("span", attributes, inner);

        public static Node span(params Node[] inner)
            => new TagNode("span", inner);

        public static Node span(IEnumerable<Node> inner)
            => new TagNode("span", inner.ToArray());

        public static Node strong(Attribute[] attributes, params Node[] inner)
            => new TagNode("strong", attributes, inner);

        public static Node strong(params Node[] inner)
            => new TagNode("strong", inner);

        public static Node strong(IEnumerable<Node> inner)
            => new TagNode("strong", inner.ToArray());

        public static Node strong(Attribute[] attributes, string text)
            => new TagNode("strong", attributes, Html.text(text));

        public static Node strong(string text)
            => new TagNode("strong", Html.text(text));

        public static Node style(Attribute[] attributes, params Node[] inner)
            => new TagNode("style", attributes, inner);

        public static Node style(params Node[] inner)
            => new TagNode("style", inner);

        public static Node style(IEnumerable<Node> inner)
            => new TagNode("style", inner.ToArray());

        public static Node sub(Attribute[] attributes, params Node[] inner)
            => new TagNode("sub", attributes, inner);

        public static Node sub(params Node[] inner)
            => new TagNode("sub", inner);

        public static Node sub(IEnumerable<Node> inner)
            => new TagNode("sub", inner.ToArray());

        public static Node summary(Attribute[] attributes, params Node[] inner)
            => new TagNode("summary", attributes, inner);

        public static Node summary(params Node[] inner)
            => new TagNode("summary", inner);

        public static Node summary(IEnumerable<Node> inner)
            => new TagNode("summary", inner.ToArray());

        public static Node sup(Attribute[] attributes, params Node[] inner)
            => new TagNode("sup", attributes, inner);

        public static Node sup(params Node[] inner)
            => new TagNode("sup", inner);

        public static Node sup(IEnumerable<Node> inner)
            => new TagNode("sup", inner.ToArray());

        public static Node table(Attribute[] attributes, params Node[] inner)
            => new TagNode("table", attributes, inner);

        public static Node table(params Node[] inner)
            => new TagNode("table", inner);

        public static Node table(IEnumerable<Node> inner)
            => new TagNode("table", inner.ToArray());

        public static Node tbody(Attribute[] attributes, params Node[] inner)
            => new TagNode("tbody", attributes, inner);

        public static Node tbody(params Node[] inner)
            => new TagNode("tbody", inner);

        public static Node tbody(IEnumerable<Node> inner)
            => new TagNode("tbody", inner.ToArray());

        public static Node td(Attribute[] attributes, params Node[] inner)
            => new TagNode("td", attributes, inner);

        public static Node td(params Node[] inner)
            => new TagNode("td", inner);

        public static Node td(IEnumerable<Node> inner)
            => new TagNode("td", inner.ToArray());

        public static Node td(Attribute[] attributes, string text)
            => new TagNode("td", attributes, Html.text(text));

        public static Node td(string text)
            => new TagNode("td", Html.text(text));

        public static Node template(Attribute[] attributes, params Node[] inner)
            => new TagNode("template", attributes, inner);

        public static Node template(params Node[] inner)
            => new TagNode("template", inner);

        public static Node template(IEnumerable<Node> inner)
            => new TagNode("template", inner.ToArray());

        public static Node textarea(Attribute[] attributes, params Node[] inner)
            => new TagNode("textarea", attributes, inner);

        public static Node textarea(params Node[] inner)
            => new TagNode("textarea", inner);

        public static Node textarea(IEnumerable<Node> inner)
            => new TagNode("textarea", inner.ToArray());

        public static Node tfoot(Attribute[] attributes, params Node[] inner)
            => new TagNode("tfoot", attributes, inner);

        public static Node tfoot(params Node[] inner)
            => new TagNode("tfoot", inner);

        public static Node tfoot(IEnumerable<Node> inner)
            => new TagNode("tfoot", inner.ToArray());

        public static Node th(Attribute[] attributes, params Node[] inner)
            => new TagNode("th", attributes, inner);

        public static Node th(params Node[] inner)
            => new TagNode("th", inner);

        public static Node th(IEnumerable<Node> inner)
            => new TagNode("th", inner.ToArray());

        public static Node th(Attribute[] attributes, string text)
            => new TagNode("th", attributes, Html.text(text));

        public static Node th(string text)
            => new TagNode("th", Html.text(text));

        public static Node thead(Attribute[] attributes, params Node[] inner)
            => new TagNode("thead", attributes, inner);

        public static Node thead(params Node[] inner)
            => new TagNode("thead", inner);

        public static Node thead(IEnumerable<Node> inner)
            => new TagNode("thead", inner.ToArray());

        public static Node time(Attribute[] attributes, params Node[] inner)
            => new TagNode("time", attributes, inner);

        public static Node time(params Node[] inner)
            => new TagNode("time", inner);

        public static Node time(IEnumerable<Node> inner)
            => new TagNode("time", inner.ToArray());

        public static Node title(Attribute[] attributes, params Node[] inner)
            => new TagNode("title", attributes, inner);

        public static Node title(params Node[] inner)
            => new TagNode("title", inner);

        public static Node title(IEnumerable<Node> inner)
            => new TagNode("title", inner.ToArray());

        public static Node tr(Attribute[] attributes, params Node[] inner)
            => new TagNode("tr", attributes, inner);

        public static Node tr(params Node[] inner)
            => new TagNode("tr", inner);

        public static Node tr(IEnumerable<Node> inner)
            => new TagNode("tr", inner.ToArray());

        public static Node track(params Attribute[] attributes)
            => new TagNode("track", attributes);

        public static Node u(Attribute[] attributes, params Node[] inner)
            => new TagNode("u", attributes, inner);

        public static Node u(params Node[] inner)
            => new TagNode("u", inner);

        public static Node u(IEnumerable<Node> inner)
            => new TagNode("u", inner.ToArray());

        public static Node ul(Attribute[] attributes, params Node[] inner)
            => new TagNode("ul", attributes, inner);

        public static Node ul(params Node[] inner)
            => new TagNode("ul", inner);

        public static Node ul(IEnumerable<Node> inner)
            => new TagNode("ul", inner.ToArray());

        public static Node var(Attribute[] attributes, params Node[] inner)
            => new TagNode("var", attributes, inner);

        public static Node var(params Node[] inner)
            => new TagNode("var", inner);

        public static Node var(IEnumerable<Node> inner)
            => new TagNode("var", inner.ToArray());

        public static Node video(Attribute[] attributes, params Node[] inner)
            => new TagNode("video", attributes, inner);

        public static Node video(params Node[] inner)
            => new TagNode("video", inner);

        public static Node video(IEnumerable<Node> inner)
            => new TagNode("video", inner.ToArray());

        public static Node wbr(params Attribute[] attributes)
            => new TagNode("wbr", attributes);
    }
}
